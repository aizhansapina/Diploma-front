{"ast":null,"code":"var _jsxFileName = \"/Users/aizhansapina/Desktop/Diploma-front/src/components/pages/auth/login/Login.js\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport Input from \"../../../shared/input/Input\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../../../services/auth\";\nimport { authorize } from \"../../../../store/actions/authActions\";\nimport \"../../../shared/header/Header-shop.scss\";\nimport \"../register/Register.scss\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: \"\"\n    };\n\n    this.handleSubmit = values => {\n      const {\n        email,\n        password\n      } = values;\n      register(email, password).then(response => {\n        this.props.authorize(email, response.data.token);\n\n        if (this.props.authorize) {\n          this.props.history.push(\"/main/profile\");\n        }\n      }).catch(error => {\n        if (error.response) {\n          this.setState({\n            formError: error.response.data.error\n          });\n        } else {\n          this.setState({\n            formError: error.message\n          });\n        }\n      });\n    };\n\n    this.validateForm = values => {\n      const errors = {};\n      const emailRegExp = new RegExp(['^(([^<>()[\\\\]\\\\.,;:\\\\s@\"]+(\\\\.[^<>()\\\\[\\\\]\\\\.,;:\\\\s@\"]+)*)', '|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.', \"[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+\", \"[a-zA-Z]{2,}))$\"].join(\"\"));\n\n      if (!values.email) {\n        errors.email = \"Email is required\";\n      } else if (!emailRegExp.test(values.email)) {\n        errors.email = \"Email must be valid\";\n      }\n\n      if (!values.password) {\n        errors.password = \"Password is required\";\n      } else if (values.password.length <= 8) {\n        errors.password = \"Password must be no shorter than 8 symbols\";\n      }\n\n      if (!values.rePassword) {\n        errors.rePassword = \"Re-enter your password\";\n      } else if (values.password !== values.rePassword) {\n        errors.rePassword = \"Passwords don't match\";\n      }\n\n      return errors;\n    };\n\n    this.renderForm = ({\n      handleSubmit,\n      handleChange,\n      errors,\n      setFieldTouched,\n      touched\n    }) => React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"Register__form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form__input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"email\",\n      type: \"text\" // label=\"Email\"\n      ,\n      onBlur: () => setFieldTouched(\"email\"),\n      error: errors.email,\n      touched: touched.email,\n      onChange: handleChange,\n      className: \"input\",\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      class: \"form__underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form__input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"password\",\n      type: \"password\" // label=\"Password\"\n      ,\n      onBlur: () => setFieldTouched(\"password\"),\n      error: errors.password,\n      touched: touched.password,\n      onChange: handleChange,\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      class: \"form__underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), this.state.formError && React.createElement(\"p\", {\n      className: \"text--error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.formError), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"form__button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"sign in\"));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"Register__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"login\"), React.createElement(Formik, {\n      onSubmit: this.handleSubmit,\n      render: this.renderForm,\n      validate: this.validateForm,\n      initialValues: {\n        email: \"\",\n        password: \"\",\n        rePassword: \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(null, {\n  authorize\n})(Login);","map":{"version":3,"sources":["/Users/aizhansapina/Desktop/Diploma-front/src/components/pages/auth/login/Login.js"],"names":["React","Component","Formik","Input","connect","register","authorize","Login","state","formError","handleSubmit","values","email","password","then","response","props","data","token","history","push","catch","error","setState","message","validateForm","errors","emailRegExp","RegExp","join","test","length","rePassword","renderForm","handleChange","setFieldTouched","touched","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Formik } from \"formik\";\nimport Input from \"../../../shared/input/Input\";\n\nimport { connect } from \"react-redux\";\nimport { register } from \"../../../../services/auth\";\nimport { authorize } from \"../../../../store/actions/authActions\";\n\nimport \"../../../shared/header/Header-shop.scss\";\n\nimport \"../register/Register.scss\";\n\nclass Login extends Component {\n  state = {\n    formError: \"\"\n  };\n\n  handleSubmit = values => {\n    const { email, password } = values;\n\n    register(email, password)\n      .then(response => {\n        this.props.authorize(email, response.data.token);\n        if (this.props.authorize) {\n          this.props.history.push(\"/main/profile\");\n        }\n      })\n      .catch(error => {\n        if (error.response) {\n          this.setState({ formError: error.response.data.error });\n        } else {\n          this.setState({ formError: error.message });\n        }\n      });\n  };\n\n  validateForm = values => {\n    const errors = {};\n\n    const emailRegExp = new RegExp(\n      [\n        '^(([^<>()[\\\\]\\\\.,;:\\\\s@\"]+(\\\\.[^<>()\\\\[\\\\]\\\\.,;:\\\\s@\"]+)*)',\n        '|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.',\n        \"[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+\",\n        \"[a-zA-Z]{2,}))$\"\n      ].join(\"\")\n    );\n\n    if (!values.email) {\n      errors.email = \"Email is required\";\n    } else if (!emailRegExp.test(values.email)) {\n      errors.email = \"Email must be valid\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (values.password.length <= 8) {\n      errors.password = \"Password must be no shorter than 8 symbols\";\n    }\n\n    if (!values.rePassword) {\n      errors.rePassword = \"Re-enter your password\";\n    } else if (values.password !== values.rePassword) {\n      errors.rePassword = \"Passwords don't match\";\n    }\n\n    return errors;\n  };\n  renderForm = ({\n    handleSubmit,\n    handleChange,\n    errors,\n    setFieldTouched,\n    touched\n  }) => (\n    <form onSubmit={handleSubmit} className=\"Register__form\">\n      <div className=\"form__input\">\n        <Input\n          name=\"email\"\n          type=\"text\"\n          // label=\"Email\"\n          onBlur={() => setFieldTouched(\"email\")}\n          error={errors.email}\n          touched={touched.email}\n          onChange={handleChange}\n          className=\"input\"\n          placeholder=\"Email\"\n        />\n        <span class=\"form__underline\"></span>\n      </div>\n      <div className=\"form__input\">\n        <Input\n          name=\"password\"\n          type=\"password\"\n          // label=\"Password\"\n          onBlur={() => setFieldTouched(\"password\")}\n          error={errors.password}\n          touched={touched.password}\n          onChange={handleChange}\n          placeholder=\"Password\"\n        />\n        <span class=\"form__underline\"></span>\n      </div>\n\n      {this.state.formError && (\n        <p className=\"text--error\">{this.state.formError}</p>\n      )}\n      <button type=\"submit\" className=\"form__button\">\n        sign in\n      </button>\n    </form>\n  );\n\n  render() {\n    return (\n      <div className=\"Register\">\n        <h2 className=\"Register__title\">login</h2>\n        <Formik\n          onSubmit={this.handleSubmit}\n          render={this.renderForm}\n          validate={this.validateForm}\n          initialValues={{\n            email: \"\",\n            password: \"\",\n            rePassword: \"\"\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {\n  authorize\n})(Login);\n"]},"metadata":{},"sourceType":"module"}