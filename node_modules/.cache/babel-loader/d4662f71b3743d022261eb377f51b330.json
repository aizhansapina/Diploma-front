{"ast":null,"code":"var _jsxFileName = \"/Users/aizhansapina/Desktop/Diploma-front/src/components/pages/auth/login/Login.js\";\nimport React, { Component } from \"react\";\nimport Input from \"../../../shared/input/Input\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { login } from \"../../../../services/auth\";\nimport { authorize } from \"../../../../store/actions/authActions\";\nimport { validateEmail } from '../services/validation';\nimport \"../../../shared/header/Header-shop.scss\";\nimport \"../register/Register.scss\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setFormField = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState(prevState => ({ ...prevState,\n        fields: { ...prevState.fields,\n          [name]: value\n        }\n      }));\n    };\n\n    this.validate = () => {\n      const {\n        fields\n      } = this.state;\n      const errorFields = {};\n\n      if (!fields.email) {\n        errorFields.email = 'Email required';\n      } else if (!validateEmail(fields.email)) {\n        errorFields.email = 'Email not valid';\n      }\n\n      if (!fields.password) {\n        errorFields.password = 'Fill password';\n      }\n\n      if (errorFields.email || errorFields.password) {\n        this.setState({\n          errorFields\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      login(this.state.fields.email, this.state.fields.password).then(response => {\n        // sessionStorage.setItem('token', response.token);\n        this.props.history.push('/main/page');\n      }).catch(console.error);\n    };\n\n    this.state = {\n      errorFields: {},\n      fields: {\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      fields: {\n        email,\n        password\n      },\n      errorFields: {\n        email: emailError,\n        password: passwordError\n      }\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"Register__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"login\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"Register__form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"email\",\n      type: \"text\",\n      onChange: this.setFormField,\n      className: \"input\",\n      placeholder: \"Email\",\n      autocomplete: \"off\",\n      value: email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form__underline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, emailError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      onChange: this.setFormField,\n      className: \"input\",\n      placeholder: \"Password\",\n      autocomplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form__underline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, passwordError)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"form__button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"sign in\")));\n  }\n\n}\n\nexport default withRouter(connect(null, {\n  authorize\n})(Login));","map":{"version":3,"sources":["/Users/aizhansapina/Desktop/Diploma-front/src/components/pages/auth/login/Login.js"],"names":["React","Component","Input","connect","withRouter","login","authorize","validateEmail","Login","constructor","props","setFormField","e","name","value","target","setState","prevState","fields","validate","state","errorFields","email","password","handleSubmit","preventDefault","then","response","history","push","catch","console","error","render","emailError","passwordError"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Input from \"../../../shared/input/Input\";\n\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { login } from \"../../../../services/auth\";\nimport { authorize } from \"../../../../store/actions/authActions\";\n\nimport { validateEmail } from '../services/validation';\n\nimport \"../../../shared/header/Header-shop.scss\";\n\nimport \"../register/Register.scss\";\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorFields: {},\n      fields: {\n        email: '',\n        password: '',\n      }\n    };\n  }\n\n  setFormField = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      fields: {\n        ...prevState.fields,\n        [name]: value,\n      },\n    }));\n  };\n\n  validate = () => {\n    const { fields } = this.state;\n    const errorFields = {};\n\n    if (!fields.email) {\n      errorFields.email = 'Email required';\n    } else if (!validateEmail(fields.email)) {\n      errorFields.email = 'Email not valid';\n    }\n\n    if (!fields.password) {\n      errorFields.password = 'Fill password';\n    }\n\n    if (errorFields.email || errorFields.password) {\n      this.setState({ errorFields });\n      return false;\n    }\n    return true;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n      login(this.state.fields.email, this.state.fields.password)\n        .then(response => {\n          // sessionStorage.setItem('token', response.token);\n          this.props.history.push('/main/page');\n        })\n        .catch(console.error)\n  }\n\n\n  render() {\n    const {\n      fields: {\n        email, password\n      },\n      errorFields: {\n        email: emailError, password: passwordError\n      }\n    } = this.state;\n    return (\n      <div className=\"Register\">\n        <h2 className=\"Register__title\">login</h2>\n        <form onSubmit={this.handleSubmit} className=\"Register__form\">\n          <div className=\"form__input\">\n            <Input\n              name=\"email\"\n              type=\"text\"\n              onChange={this.setFormField}\n              className=\"input\"\n              placeholder=\"Email\"\n              autocomplete='off'\n              value={email}\n            />\n            <span className=\"form__underline\">{emailError}</span>\n          </div>\n\n          <div className=\"form__input\">\n            <Input\n                name=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={this.setFormField}\n                className=\"input\"\n                placeholder=\"Password\"\n                autocomplete='off'\n            />\n            <span className=\"form__underline\">{passwordError}</span>\n          </div>\n          <button type=\"submit\" className=\"form__button\">\n            sign in\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(null, {\n  authorize\n})(Login));"]},"metadata":{},"sourceType":"module"}